[metadata]
name = ARCCnet
provides = arccnet
author = ARCAFF Team
author_email =
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = https://arcaff.eu
description = Active Region Cutout Classification Network
long_description = file: README.rst
long_description_content_type = text/x-rst
github_project = arcaff/arccnet
platform = any
keywords = solar physics, solar, science, machine learning, space weather
classifiers =
  Development Status :: 1 - Planning
  Intended Audience :: Science/Research
  License :: OSI Approved :: BSD License
  Natural Language :: English
  Operating System :: OS Independent
  Programming Language :: Python
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.9
  Programming Language :: Python :: 3.10
  Programming Language :: Python :: 3.11
  Topic :: Scientific/Engineering :: Physics

[options]
zip_safe = False
packages = find:
include_package_data = True
python_requires = >=3.9
setup_requires = setuptools_scm
install_requires =
    sunpy[all]

;[options.entry_points]
;console_scripts =
;    astropy-package-template-example = packagename.example_mod:main

[options.extras_require]
test =
    pytest
    pytest-doctestplus
    pytest-cov
    pytest-mock
docs =
    sphinx
    sphinx-automodapi
    pydata_sphinx_theme
dev = # Probably should not pin these
    black==22.3.0
    docker==5.0.3
    flake8==5.0.4
    isort>=4.3.21, <5.0
    pipdeptree==2.0.0
    pre-commit==2.10.1
    protobuf==3.20.1
all =
    %(test)s
    %(docs)s
    %(dev)s

[tool:pytest]
testpaths = "arccnet" "docs"
norecursedirs = ".tox" "build" "docs[\/]_build" "docs[\/]generated" "*.egg-info" "examples" "sunkit_image[/\]_dev" ".jupyter" ".history" "tools"
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[coverage:run]
omit =
  arccnet/__init*
  arccnet/conftest.py
  arccnet/*setup_package*
  arccnet/tests/*
  arccnet/*/tests/*
  arccnet/extern/*
  arccnet/version*
  */arccnet/__init*
  */arccnet/conftest.py
  */arccnet/*setup_package*
  */arccnet/tests/*
  */arccnet/*/tests/*
  */arccnet/extern/*
  */arccnet/version*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
  # Don't complain about IPython completion helper
  def _ipython_key_completions_

[pycodestyle]
max_line_length = 110

[flake8]
max-line-length = 110
exclude =
    .git,
    __pycache__,
    docs/conf.py,
    build
rst-directives =
    plot

[isort]
balanced_wrapping = True
skip=docs/conf.py,arccnet/__init__.py
default_section = THIRDPARTY
include_trailing_comma = True
known_astropy = astropy
known_first_party = sunpy
length_sort = False
length_sort_sections = stdlib
line_length = 110
multi_line_output = 3
no_lines_before = LOCALFOLDER
sections = STDLIB, THIRDPARTY, ASTROPY, FIRSTPARTY, LOCALFOLDER

[codespell]
skip = *.asdf,*.fits,*.fts,*.header,*.json,*.xsh,*cache*,*egg*,*extern*,.git,.idea,.tox,_build,*truncated,*.svg
ignore-words-list =
    alog,
    nd,
    nin,
    observ,
    ot,
    te,
    upto,
    fro,
    hax
